package com.ipaynow.bcfinance.chain.contract;

import com.cryptape.cita.abi.*;
import com.cryptape.cita.abi.datatypes.Address;
import com.cryptape.cita.abi.datatypes.DynamicArray;
import com.cryptape.cita.abi.datatypes.Event;
import com.cryptape.cita.abi.datatypes.Type;
import com.cryptape.cita.abi.datatypes.generated.Uint128;
import com.cryptape.cita.abi.datatypes.generated.Uint256;
import com.cryptape.cita.protocol.CITAj;
import com.cryptape.cita.protocol.core.DefaultBlockParameter;
import com.cryptape.cita.protocol.core.RemoteCall;
import com.cryptape.cita.protocol.core.methods.request.AppFilter;
import com.cryptape.cita.protocol.core.methods.response.Log;
import com.cryptape.cita.protocol.core.methods.response.TransactionReceipt;
import com.cryptape.cita.tx.Contract;
import com.cryptape.cita.tx.TransactionManager;
import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/cryptape/citaj/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with citaj version 0.24.0.
 */
public class FinanceTrade extends Contract {
    private static final String BINARY = "";

    protected FinanceTrade(String contractAddress, CITAj citaj, TransactionManager transactionManager) {
        super(BINARY, contractAddress, citaj, transactionManager);
    }

    public List<DoApplyLoanEventResponse> getDoApplyLoanEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("doApplyLoan", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Uint256>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<DoApplyLoanEventResponse> responses = new ArrayList<DoApplyLoanEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            DoApplyLoanEventResponse typedResponse = new DoApplyLoanEventResponse();
            typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._assetAddr = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DoApplyLoanEventResponse> doApplyLoanEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("doApplyLoan", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Uint256>() {}));
        AppFilter filter = new AppFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return citaj.appLogFlowable(filter).map(new Function<Log, DoApplyLoanEventResponse>() {
            @Override
            public DoApplyLoanEventResponse apply(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                DoApplyLoanEventResponse typedResponse = new DoApplyLoanEventResponse();
                typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._assetAddr = (List<String>) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public List<DoAcceptEventResponse> getDoAcceptEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("doAccept", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<DoAcceptEventResponse> responses = new ArrayList<DoAcceptEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            DoAcceptEventResponse typedResponse = new DoAcceptEventResponse();
            typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._financeCreditToken = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DoAcceptEventResponse> doAcceptEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("doAccept", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        AppFilter filter = new AppFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return citaj.appLogFlowable(filter).map(new Function<Log, DoAcceptEventResponse>() {
            @Override
            public DoAcceptEventResponse apply(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                DoAcceptEventResponse typedResponse = new DoAcceptEventResponse();
                typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._financeCreditToken = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public List<DoLoanEventResponse> getDoLoanEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("doLoan", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<DoLoanEventResponse> responses = new ArrayList<DoLoanEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            DoLoanEventResponse typedResponse = new DoLoanEventResponse();
            typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._totalAmount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._financeRepayToken = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DoLoanEventResponse> doLoanEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("doLoan", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        AppFilter filter = new AppFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return citaj.appLogFlowable(filter).map(new Function<Log, DoLoanEventResponse>() {
            @Override
            public DoLoanEventResponse apply(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                DoLoanEventResponse typedResponse = new DoLoanEventResponse();
                typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._totalAmount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._financeRepayToken = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public List<DoRepayEventResponse> getDoRepayEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("doRepay", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<Uint128>() {}, new TypeReference<Uint256>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<DoRepayEventResponse> responses = new ArrayList<DoRepayEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            DoRepayEventResponse typedResponse = new DoRepayEventResponse();
            typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._repayId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DoRepayEventResponse> doRepayEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("doRepay", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint128>() {}, new TypeReference<Uint128>() {}, new TypeReference<Uint256>() {}));
        AppFilter filter = new AppFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return citaj.appLogFlowable(filter).map(new Function<Log, DoRepayEventResponse>() {
            @Override
            public DoRepayEventResponse apply(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                DoRepayEventResponse typedResponse = new DoRepayEventResponse();
                typedResponse._creditId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._repayId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.stage = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public List<DoSetAssetStatementAddressEventResponse> getDoSetAssetStatementAddressEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("doSetAssetStatementAddress", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<DoSetAssetStatementAddressEventResponse> responses = new ArrayList<DoSetAssetStatementAddressEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            DoSetAssetStatementAddressEventResponse typedResponse = new DoSetAssetStatementAddressEventResponse();
            typedResponse._assetAddress = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DoSetAssetStatementAddressEventResponse> doSetAssetStatementAddressEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("doSetAssetStatementAddress", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        AppFilter filter = new AppFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return citaj.appLogFlowable(filter).map(new Function<Log, DoSetAssetStatementAddressEventResponse>() {
            @Override
            public DoSetAssetStatementAddressEventResponse apply(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                DoSetAssetStatementAddressEventResponse typedResponse = new DoSetAssetStatementAddressEventResponse();
                typedResponse._assetAddress = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public RemoteCall<TransactionReceipt> setAssetStatementAddress(List<String> _assetAddress, Long quota, String nonce, Long validUntilBlock, Integer version, BigInteger chainId, String value) {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function(
                "setAssetStatementAddress", 
                Arrays.<Type>asList(new DynamicArray<Address>(
                        Utils.typeMap(_assetAddress, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, quota, nonce, validUntilBlock, version, chainId, value);
    }

    public RemoteCall<TransactionReceipt> repay(BigInteger _creditId, BigInteger _repayId, BigInteger _repayAmount, BigInteger _repayPrinciple, BigInteger _financeRateAmount, BigInteger _status, String _creditorId, String _debtorId, Long quota, String nonce, Long validUntilBlock, Integer version, BigInteger chainId, String value) {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function(
                "repay", 
                Arrays.<Type>asList(new Uint128(_creditId),
                new Uint128(_repayId),
                new Uint256(_repayAmount),
                new Uint256(_repayPrinciple),
                new Uint256(_financeRateAmount),
                new com.cryptape.cita.abi.datatypes.generated.Uint8(_status), 
                new com.cryptape.cita.abi.datatypes.Utf8String(_creditorId), 
                new com.cryptape.cita.abi.datatypes.Utf8String(_debtorId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, quota, nonce, validUntilBlock, version, chainId, value);
    }

    public RemoteCall<TransactionReceipt> accept(BigInteger _creditId, Long quota, String nonce, Long validUntilBlock, Integer version, BigInteger chainId, String value) {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function(
                "accept", 
                Arrays.<Type>asList(new Uint128(_creditId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, quota, nonce, validUntilBlock, version, chainId, value);
    }

    public RemoteCall<BigInteger> stage() {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function("stage", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getFinanceCreditToken() {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function("getFinanceCreditToken", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> applyLoan(BigInteger _creditId, Long quota, String nonce, Long validUntilBlock, Integer version, BigInteger chainId, String value) {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function(
                "applyLoan", 
                Arrays.<Type>asList(new Uint128(_creditId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, quota, nonce, validUntilBlock, version, chainId, value);
    }

    public RemoteCall<TransactionReceipt> loan(BigInteger _creditId, BigInteger _totalAmount, Long quota, String nonce, Long validUntilBlock, Integer version, BigInteger chainId, String value) {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function(
                "loan", 
                Arrays.<Type>asList(new Uint128(_creditId),
                new Uint256(_totalAmount)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, quota, nonce, validUntilBlock, version, chainId, value);
    }

    public RemoteCall<String> getFinanceRepayToken() {
        com.cryptape.cita.abi.datatypes.Function function = new com.cryptape.cita.abi.datatypes.Function("getFinanceRepayToken", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<FinanceTrade> deploy(CITAj citaj, TransactionManager transactionManager, Long quota, String nonce, Long validUntilBlock, Integer version, String value, BigInteger chainId, List<String> _assetAddr, String _accountFactoryAddress, String _cooperationAddress, BigInteger _creditId, String _creditorId, String _debtorId) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new DynamicArray<Address>(
                        Utils.typeMap(_assetAddr, Address.class)),
                new Address(_accountFactoryAddress),
                new Address(_cooperationAddress),
                new Uint128(_creditId),
                new com.cryptape.cita.abi.datatypes.Utf8String(_creditorId), 
                new com.cryptape.cita.abi.datatypes.Utf8String(_debtorId)));
        return deployRemoteCall(FinanceTrade.class, citaj, transactionManager, quota, nonce, validUntilBlock, version, chainId, value, BINARY, encodedConstructor);
    }

    public static FinanceTrade load(String contractAddress, CITAj citaj, TransactionManager transactionManager) {
        return new FinanceTrade(contractAddress, citaj, transactionManager);
    }

    public static class DoApplyLoanEventResponse {
        public BigInteger _creditId;

        public List<String> _assetAddr;

        public BigInteger stage;
    }

    public static class DoAcceptEventResponse {
        public BigInteger _creditId;

        public BigInteger stage;

        public String _financeCreditToken;
    }

    public static class DoLoanEventResponse {
        public BigInteger _creditId;

        public BigInteger _totalAmount;

        public BigInteger stage;

        public String _financeRepayToken;
    }

    public static class DoRepayEventResponse {
        public BigInteger _creditId;

        public BigInteger _repayId;

        public BigInteger stage;
    }

    public static class DoSetAssetStatementAddressEventResponse {
        public List<String> _assetAddress;
    }
}
