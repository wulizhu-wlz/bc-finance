<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipaynow.bcfinance.dao.BlockChainAccountMapper">
  <resultMap id="BaseResultMap" type="com.ipaynow.bcfinance.domain.BlockChainAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="id_of_tb_merchant_user" jdbcType="INTEGER" property="idOfTbMerchantUser" />
    <result column="user_id_of_i_pay_now" jdbcType="VARCHAR" property="userIdOfIPayNow" />
    <result column="private_key" jdbcType="VARCHAR" property="privateKey" />
    <result column="public_key" jdbcType="VARCHAR" property="publicKey" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="acc_address" jdbcType="VARCHAR" property="accAddress" />
    <result column="account_type" jdbcType="TINYINT" property="accountType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, id_of_tb_merchant_user, user_id_of_i_pay_now, private_key, public_key, address, 
    acc_address, account_type, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bf_block_chain_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bf_block_chain_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bf_block_chain_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccountExample">
    delete from bf_block_chain_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccount">
    insert into bf_block_chain_account (id, id_of_tb_merchant_user, user_id_of_i_pay_now, 
      private_key, public_key, address, 
      acc_address, account_type, create_time, 
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{idOfTbMerchantUser,jdbcType=INTEGER}, #{userIdOfIPayNow,jdbcType=VARCHAR}, 
      #{privateKey,jdbcType=VARCHAR}, #{publicKey,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{accAddress,jdbcType=VARCHAR}, #{accountType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccount" useGeneratedKeys="true" keyProperty="id">
    insert into bf_block_chain_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idOfTbMerchantUser != null">
        id_of_tb_merchant_user,
      </if>
      <if test="userIdOfIPayNow != null">
        user_id_of_i_pay_now,
      </if>
      <if test="privateKey != null">
        private_key,
      </if>
      <if test="publicKey != null">
        public_key,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="accAddress != null">
        acc_address,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="idOfTbMerchantUser != null">
        #{idOfTbMerchantUser,jdbcType=INTEGER},
      </if>
      <if test="userIdOfIPayNow != null">
        #{userIdOfIPayNow,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="accAddress != null">
        #{accAddress,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccountExample" resultType="java.lang.Long">
    select count(*) from bf_block_chain_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bf_block_chain_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idOfTbMerchantUser != null">
        id_of_tb_merchant_user = #{record.idOfTbMerchantUser,jdbcType=INTEGER},
      </if>
      <if test="record.userIdOfIPayNow != null">
        user_id_of_i_pay_now = #{record.userIdOfIPayNow,jdbcType=VARCHAR},
      </if>
      <if test="record.privateKey != null">
        private_key = #{record.privateKey,jdbcType=VARCHAR},
      </if>
      <if test="record.publicKey != null">
        public_key = #{record.publicKey,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.accAddress != null">
        acc_address = #{record.accAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bf_block_chain_account
    set id = #{record.id,jdbcType=INTEGER},
      id_of_tb_merchant_user = #{record.idOfTbMerchantUser,jdbcType=INTEGER},
      user_id_of_i_pay_now = #{record.userIdOfIPayNow,jdbcType=VARCHAR},
      private_key = #{record.privateKey,jdbcType=VARCHAR},
      public_key = #{record.publicKey,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      acc_address = #{record.accAddress,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccount">
    update bf_block_chain_account
    <set>
      <if test="idOfTbMerchantUser != null">
        id_of_tb_merchant_user = #{idOfTbMerchantUser,jdbcType=INTEGER},
      </if>
      <if test="userIdOfIPayNow != null">
        user_id_of_i_pay_now = #{userIdOfIPayNow,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        private_key = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null">
        public_key = #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="accAddress != null">
        acc_address = #{accAddress,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ipaynow.bcfinance.domain.BlockChainAccount">
    update bf_block_chain_account
    set id_of_tb_merchant_user = #{idOfTbMerchantUser,jdbcType=INTEGER},
      user_id_of_i_pay_now = #{userIdOfIPayNow,jdbcType=VARCHAR},
      private_key = #{privateKey,jdbcType=VARCHAR},
      public_key = #{publicKey,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      acc_address = #{accAddress,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>